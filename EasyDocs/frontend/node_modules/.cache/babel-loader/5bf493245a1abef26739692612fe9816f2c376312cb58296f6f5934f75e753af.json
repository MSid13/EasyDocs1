{"ast":null,"code":"/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js';\nimport * as object from './object.js';\nimport * as traits from './traits.js';\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args);\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1);\n    }\n  }\n};\nexport const nop = () => {};\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f();\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a;\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b;\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || a != null && b != null && a.constructor === b.constructor && (array.isArray(a) && array.equalFlat(a, /** @type {Array<T>} */b) || typeof a === 'object' && object.equalFlat(a, b));\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a === b) {\n    return true;\n  }\n  if (a == null || b == null || a.constructor !== b.constructor) {\n    return false;\n  }\n  if (a[traits.EqualityTraitSymbol] != null) {\n    return a[traits.EqualityTraitSymbol](b);\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a);\n      b = new Uint8Array(b);\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array:\n      {\n        if (a.byteLength !== b.byteLength) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          if (a[i] !== b[i]) {\n            return false;\n          }\n        }\n        break;\n      }\n    case Set:\n      {\n        if (a.size !== b.size) {\n          return false;\n        }\n        for (const value of a) {\n          if (!b.has(value)) {\n            return false;\n          }\n        }\n        break;\n      }\n    case Map:\n      {\n        if (a.size !== b.size) {\n          return false;\n        }\n        for (const key of a.keys()) {\n          if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n            return false;\n          }\n        }\n        break;\n      }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false;\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false;\n        }\n      }\n      break;\n    case Array:\n      if (a.length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false;\n        }\n      }\n      break;\n    default:\n      return false;\n  }\n  return true;\n};\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value);\n/* c8 ignore stop */\n\nexport const isArray = array.isArray;\n\n/**\n * @param {any} s\n * @return {s is String}\n */\nexport const isString = s => s && s.constructor === String;\n\n/**\n * @param {any} n\n * @return {n is Number}\n */\nexport const isNumber = n => n != null && n.constructor === Number;\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */\nexport const is = (n, T) => n && n.constructor === T;\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */\nexport const isTemplate = T =>\n/**\n * @param {any} n\n * @return {n is InstanceType<TYPE>}\n **/\nn => n && n.constructor === T;","map":{"version":3,"names":["array","object","traits","callAll","fs","args","i","length","nop","apply","f","id","a","equalityStrict","b","equalityFlat","constructor","isArray","equalFlat","equalityDeep","EqualityTraitSymbol","ArrayBuffer","Uint8Array","byteLength","Set","size","value","has","Map","key","keys","get","Object","hasProperty","Array","isOneOf","options","includes","isString","s","String","isNumber","n","Number","is","T","isTemplate"],"sources":["/Users/smantrala/Documents/GitHub/EasyDocs/node_modules/lib0/function.js"],"sourcesContent":["/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\nimport * as traits from './traits.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((array.isArray(a) && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a === b) {\n    return true\n  }\n  if (a == null || b == null || a.constructor !== b.constructor) {\n    return false\n  }\n  if (a[traits.EqualityTraitSymbol] != null) {\n    return a[traits.EqualityTraitSymbol](b)\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n\nexport const isArray = array.isArray\n\n/**\n * @param {any} s\n * @return {s is String}\n */\nexport const isString = (s) => s && s.constructor === String\n\n/**\n * @param {any} n\n * @return {n is Number}\n */\nexport const isNumber = n => n != null && n.constructor === Number\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */\nexport const is = (n, T) => n && n.constructor === T\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */\nexport const isTemplate = (T) =>\n  /**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/\n  n => n && n.constructor === T\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}